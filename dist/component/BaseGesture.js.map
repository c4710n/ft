{"version":3,"sources":["../../src/component/BaseGesture.js"],"names":["Component","BaseGesture","onStart","onMove","onEnd","name","dragging","eventData","pointerdownPosition","moveDone","displayObject","interactive","on","onPointerDown","onPointerUp","onPointerMove","off","event","component","data","getLocalPosition","currentPosition","result"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,aAAtB;;IAEMC,W;;;;;AACJ,yBAA6C;AAAA;;AAAA,mFAAJ,EAAI;AAAA,QAA/BC,OAA+B,QAA/BA,OAA+B;AAAA,QAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,QAAdC,KAAc,QAAdA,KAAc;;AAAA;;AAC3C;AAEA,UAAKC,IAAL,GAAY,cAAZ;AACA,UAAKC,QAAL,GAAgB,KAAhB;AACA,UAAKC,SAAL,GAAiB,IAAjB;AACA,UAAKC,mBAAL,GAA2B,IAA3B;AAEA,UAAKN,OAAL,GAAeA,OAAf;AACA,UAAKC,MAAL,GAAcA,MAAd;AACA,UAAKC,KAAL,GAAaA,KAAb;AACA,UAAKK,QAAL,GAAgB,KAAhB;AAX2C;AAY5C;;;;WAED,iBAAQC,aAAR,EAAuB;AACrBA,MAAAA,aAAa,CAACC,WAAd,GAA4B,IAA5B;AACAD,MAAAA,aAAa,CAACE,EAAd,CAAiB,aAAjB,EAAgC,KAAKC,aAArC,EAAoD,IAApD;AACAH,MAAAA,aAAa,CAACE,EAAd,CAAiB,WAAjB,EAA8B,KAAKE,WAAnC,EAAgD,IAAhD;AACAJ,MAAAA,aAAa,CAACE,EAAd,CAAiB,kBAAjB,EAAqC,KAAKE,WAA1C,EAAuD,IAAvD;AACAJ,MAAAA,aAAa,CAACE,EAAd,CAAiB,aAAjB,EAAgC,KAAKG,aAArC,EAAoD,IAApD;AACD;;;WAED,mBAAUL,aAAV,EAAyB;AACvBA,MAAAA,aAAa,CAACC,WAAd,GAA4B,KAA5B;AACAD,MAAAA,aAAa,CAACM,GAAd,CAAkB,aAAlB,EAAiC,KAAKH,aAAtC,EAAqD,IAArD;AACAH,MAAAA,aAAa,CAACM,GAAd,CAAkB,WAAlB,EAA+B,KAAKF,WAApC,EAAiD,IAAjD;AACAJ,MAAAA,aAAa,CAACM,GAAd,CAAkB,kBAAlB,EAAsC,KAAKF,WAA3C,EAAwD,IAAxD;AACAJ,MAAAA,aAAa,CAACM,GAAd,CAAkB,aAAlB,EAAiC,KAAKD,aAAtC,EAAqD,IAArD;AACD;;;WAED,uBAAcE,KAAd,EAAqB;AAAA;;AACnB,UAAMC,SAAS,GAAG,IAAlB;AACA,UAAQR,aAAR,GAA0B,IAA1B,CAAQA,aAAR;AAEA,WAAKJ,QAAL,GAAgB,IAAhB;AACA,WAAKG,QAAL,GAAgB,KAAhB;AACA,WAAKF,SAAL,GAAiBU,KAAK,CAACE,IAAvB,CANmB,CAQnB;;AACA,WAAKX,mBAAL,GAA2B,KAAKD,SAAL,CAAea,gBAAf,CAAgCV,aAAhC,CAA3B;AAEA,4BAAAQ,SAAS,CAAChB,OAAV,+EAAAgB,SAAS,EAAWR,aAAX,CAAT;AACD;;;WAED,uBAAc;AAAA;;AACZ,UAAMQ,SAAS,GAAG,IAAlB;AACA,UAAQR,aAAR,GAA0B,IAA1B,CAAQA,aAAR;AAEA,WAAKJ,QAAL,GAAgB,KAAhB;AACA,WAAKC,SAAL,GAAiB,IAAjB;AAEA,0BAAAW,SAAS,CAACd,KAAV,2EAAAc,SAAS,EAASR,aAAT,CAAT;AACD;;;WAED,yBAAgB;AACd,UAAI,CAAC,KAAKJ,QAAN,IAAkB,KAAKG,QAA3B,EAAqC;AACrC,UAAMS,SAAS,GAAG,IAAlB;AACA,UAAQR,aAAR,GAA+C,IAA/C,CAAQA,aAAR;AAAA,UAAuBF,mBAAvB,GAA+C,IAA/C,CAAuBA,mBAAvB,CAHc,CAKd;;AACA,UAAMa,eAAe,GAAG,KAAKd,SAAL,CAAea,gBAAf,CAAgCV,aAAhC,CAAxB;AAEA,UAAMY,MAAM,GAAGJ,SAAS,CAACf,MAAV,CACbO,aADa,EAEbF,mBAFa,EAGba,eAHa,CAAf;;AAKA,UAAIC,MAAM,KAAK,IAAf,EAAqB;AACnB,aAAKb,QAAL,GAAgB,IAAhB;AACD;AACF;;;;EAvEuBT,S;;AA0E1B,eAAeC,WAAf","sourcesContent":["import Component from './Component'\n\nclass BaseGesture extends Component {\n  constructor({ onStart, onMove, onEnd } = {}) {\n    super()\n\n    this.name = 'base-gesture'\n    this.dragging = false\n    this.eventData = null\n    this.pointerdownPosition = null\n\n    this.onStart = onStart\n    this.onMove = onMove\n    this.onEnd = onEnd\n    this.moveDone = false\n  }\n\n  onAdded(displayObject) {\n    displayObject.interactive = true\n    displayObject.on('pointerdown', this.onPointerDown, this)\n    displayObject.on('pointerup', this.onPointerUp, this)\n    displayObject.on('pointerupoutside', this.onPointerUp, this)\n    displayObject.on('pointermove', this.onPointerMove, this)\n  }\n\n  onRemoved(displayObject) {\n    displayObject.interactive = false\n    displayObject.off('pointerdown', this.onPointerDown, this)\n    displayObject.off('pointerup', this.onPointerUp, this)\n    displayObject.off('pointerupoutside', this.onPointerUp, this)\n    displayObject.off('pointermove', this.onPointerMove, this)\n  }\n\n  onPointerDown(event) {\n    const component = this\n    const { displayObject } = this\n\n    this.dragging = true\n    this.moveDone = false\n    this.eventData = event.data\n\n    // click position relative to current displayObject\n    this.pointerdownPosition = this.eventData.getLocalPosition(displayObject)\n\n    component.onStart?.(displayObject)\n  }\n\n  onPointerUp() {\n    const component = this\n    const { displayObject } = this\n\n    this.dragging = false\n    this.eventData = null\n\n    component.onEnd?.(displayObject)\n  }\n\n  onPointerMove() {\n    if (!this.dragging || this.moveDone) return\n    const component = this\n    const { displayObject, pointerdownPosition } = this\n\n    // click position relative to current displayObject\n    const currentPosition = this.eventData.getLocalPosition(displayObject)\n\n    const result = component.onMove(\n      displayObject,\n      pointerdownPosition,\n      currentPosition\n    )\n    if (result === true) {\n      this.moveDone = true\n    }\n  }\n}\n\nexport default BaseGesture\n"],"file":"BaseGesture.js"}