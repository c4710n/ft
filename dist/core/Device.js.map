{"version":3,"sources":["../../src/core/Device.js"],"names":["PIXI","Device","window","devicePixelRatio","width","document","documentElement","clientWidth","height","clientHeight","Rectangle","cssSize","cssWidth","cssHeight","DPR","ua","navigator","userAgent","pattern","test","UA","pattern_ios","RegExp","pattern_android"],"mappings":";;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AAEA;AACA;AACA;;IACMC,M;;;;;;;;AACJ;AACF;AACA;AACE,mBAAiB;AACf,aAAOC,MAAM,CAACC,gBAAP,IAA2B,CAAlC;AACD;AAED;AACF;AACA;;;;SACE,eAAqB;AACnB,UAAMC,KAAK,GAAGC,QAAQ,CAACC,eAAT,CAAyBC,WAAvC;AACA,UAAMC,MAAM,GAAGH,QAAQ,CAACC,eAAT,CAAyBG,YAAxC;AACA,aAAO,IAAIT,IAAI,CAACU,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,EAAyBN,KAAzB,EAAgCI,MAAhC,CAAP;AACD;AAED;AACF;AACA;;;;SACE,eAAkB;AAChB,0BAA+C,KAAKG,OAApD;AAAA,UAAeC,QAAf,iBAAQR,KAAR;AAAA,UAAiCS,SAAjC,iBAAyBL,MAAzB;AACA,UAAMJ,KAAK,GAAGQ,QAAQ,GAAGX,MAAM,CAACa,GAAhC;AACA,UAAMN,MAAM,GAAGK,SAAS,GAAGZ,MAAM,CAACa,GAAlC;AACA,aAAO,IAAId,IAAI,CAACU,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,EAAyBN,KAAzB,EAAgCI,MAAhC,CAAP;AACD;AAED;AACF;AACA;;;;SACE,eAAgB;AACd,UAAMO,EAAE,GACNb,MAAM,IAAIA,MAAM,CAACc,SAAjB,IAA8Bd,MAAM,CAACc,SAAP,CAAiBC,SAA/C,GACIf,MAAM,CAACc,SAAP,CAAiBC,SADrB,GAEI,EAHN;AAKA,aAAOF,EAAP;AACD;;;SAED,eAAmB;AACjB,UAAMG,OAAO,GAAG,kBAAhB;AACA,aAAOA,OAAO,CAACC,IAAR,CAAalB,MAAM,CAACmB,EAApB,CAAP;AACD;;;SAED,eAAuB;AACrB,UAAMF,OAAO,GAAG,UAAhB;AACA,aAAOA,OAAO,CAACC,IAAR,CAAalB,MAAM,CAACmB,EAApB,CAAP;AACD;;;SAED,eAAsB;AACpB,UAAMF,OAAO,GAAG,iBAAhB;AACA,aAAOA,OAAO,CAACC,IAAR,CAAalB,MAAM,CAACmB,EAApB,CAAP;AACD;;;SAED,eAAkB;AAChB,UAAMC,WAAW,GAAG,IAAIC,MAAJ,CAClB,+CADkB,CAApB;AAGA,UAAMC,eAAe,GAAG,IAAID,MAAJ,CACtB,mDADsB,EAEtB,IAFsB,CAAxB;AAIA,aAAOD,WAAW,CAACF,IAAZ,CAAiBlB,MAAM,CAACmB,EAAxB,KAA+BG,eAAe,CAACJ,IAAhB,CAAqBlB,MAAM,CAACmB,EAA5B,CAAtC;AACD;;;SAED,eAAyB;AACvB,UAAMF,OAAO,GAAG,gCAAhB,CADuB,CAC0B;;AACjD,aAAOA,OAAO,CAACC,IAAR,CAAalB,MAAM,CAACmB,EAApB,CAAP;AACD;;;;;;AAGH,eAAenB,MAAf","sourcesContent":["import PIXI from './PIXI'\n\n/**\n * Get metadata of device.\n */\nclass Device {\n  /**\n   * DPR of current device.\n   */\n  static get DPR() {\n    return window.devicePixelRatio || 1\n  }\n\n  /**\n   * Size in CSS pixel of current device.\n   */\n  static get cssSize() {\n    const width = document.documentElement.clientWidth\n    const height = document.documentElement.clientHeight\n    return new PIXI.Rectangle(0, 0, width, height)\n  }\n\n  /**\n   * Size in physical pixel of current device.\n   */\n  static get size() {\n    const { width: cssWidth, height: cssHeight } = this.cssSize\n    const width = cssWidth * Device.DPR\n    const height = cssHeight * Device.DPR\n    return new PIXI.Rectangle(0, 0, width, height)\n  }\n\n  /**\n   * User agent.\n   */\n  static get UA() {\n    const ua =\n      window && window.navigator && window.navigator.userAgent\n        ? window.navigator.userAgent\n        : ''\n\n    return ua\n  }\n\n  static get isIOS() {\n    const pattern = /ip[honead]{2,4}/i\n    return pattern.test(Device.UA)\n  }\n\n  static get isAndroid() {\n    const pattern = /android/i\n    return pattern.test(Device.UA)\n  }\n\n  static get isWeChat() {\n    const pattern = /MicroMessenger/i\n    return pattern.test(Device.UA)\n  }\n\n  static get isQQ() {\n    const pattern_ios = new RegExp(\n      '(iPad|iPhone|iPod).*? (IPad)?QQ\\\\/([\\\\d\\\\.]+)'\n    )\n    const pattern_android = new RegExp(\n      '\\\\bV1_AND_SQI?_([\\\\d\\\\.]+)(.*? QQ\\\\/([\\\\d\\\\.]+))?',\n      'ig'\n    )\n    return pattern_ios.test(Device.UA) || pattern_android.test(Device.UA)\n  }\n\n  static get isQQBrowser() {\n    const pattern = /m?(qqbrowser)[\\/\\s]?([\\w\\.]+)/i // eslint-disable-line\n    return pattern.test(Device.UA)\n  }\n}\n\nexport default Device\n"],"file":"Device.js"}