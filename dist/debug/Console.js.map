{"version":3,"sources":["../../src/debug/Console.js"],"names":["qs","Console","field","qo","parse","hasField","undefined","then","VConsole"],"mappings":";;;;;;;;;;AAAA,SAASA,EAAT,QAAmB,SAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,O;AACJ;AACF;AACA;AACE,mBAA6B;AAAA,MAAjBC,KAAiB,uEAAT,OAAS;;AAAA;;AAC3B,MAAMC,EAAE,GAAGH,EAAE,CAACI,KAAH,EAAX;AACA,MAAMC,QAAQ,GAAGF,EAAE,CAACD,KAAD,CAAF,KAAcI,SAA/B;;AACA,MAAID,QAAJ,EAAc;AACZ,WAAO,UAAP,EAAmBE,IAAnB,CAAwB,gBAA2B;AAAA,UAAfC,QAAe;AACjD,UAAIA,QAAJ;AACD,KAFD;AAGD;AACF,C;;AAGH,eAAeP,OAAf","sourcesContent":["import { qs } from '../util'\n\n/**\n * Load vConsole according querystring. When specified pattern is found in\n * querystring, vConsole will be enabled.\n *\n * @example\n * new Console('debug')\n * // After adding this line, when you visit https://example.com?debug,\n * // vConsole will be loaded\n *\n * @see https://github.com/Tencent/vConsole\n */\nclass Console {\n  /**\n   * @param {string} [field='debug'] field will be searched in querystring\n   */\n  constructor(field = 'debug') {\n    const qo = qs.parse()\n    const hasField = qo[field] !== undefined\n    if (hasField) {\n      import('vconsole').then(({ default: VConsole }) => {\n        new VConsole()\n      })\n    }\n  }\n}\n\nexport default Console\n"],"file":"Console.js"}