{"version":3,"sources":["../../../src/display/CanvasVideo/index.js"],"names":["EventEmitter","Video","DOM","JSMpeg","EE","CanvasVideo","args","isPlayed","url","layer","poster","loop","video","setOrigin","addChild","posterURL","options","canvas","dom","videoBufferSize","onPlay","onEnded","onEnd","videoPlayer","Player","volume","value","context","isPlaying","emit","promise","Promise","resolve","on","play","pause"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,YAAP,MAAyB,eAAzB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,IAAMC,EAAE,GAAG,IAAIJ,YAAJ,EAAX;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMK,W;;;;;AACJ,yBAAqB;AAAA;;AAAA;;AAAA,sCAANC,IAAM;AAANA,MAAAA,IAAM;AAAA;;AACnB,oDAASA,IAAT;AAEA,UAAKC,QAAL,GAAgB,KAAhB;AAHmB;AAIpB;;;;WAED,2BAAkBC,GAAlB,EAAqD;AAAA;;AAAA,qFAAJ,EAAI;AAAA,UAA5BC,KAA4B,QAA5BA,KAA4B;AAAA,UAArBC,MAAqB,QAArBA,MAAqB;AAAA,UAAbC,IAAa,QAAbA,IAAa;;AACnD,UAAMC,KAAK,GAAG,IAAIV,GAAJ,CAAQ,QAAR,EAAkB;AAAEO,QAAAA,KAAK,EAALA;AAAF,OAAlB,EAA6BI,SAA7B,CAAuC,GAAvC,CAAd;AACA,WAAKD,KAAL,GAAaA,KAAb;AACA,WAAKE,QAAL,CAAcF,KAAd;AAEA,UAAMG,SAAS,GAAGL,MAAlB;AACA,UAAMM,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAEL,KAAK,CAACM,GADA;AAEdR,QAAAA,MAAM,EAAEK,SAFM;AAGdJ,QAAAA,IAAI,EAAJA,IAHc;AAIdQ,QAAAA,eAAe,EAAE,OAAO,IAJV;AAIgB;AAC9BC,QAAAA,MAAM,EAAE,kBAAM;AACZ,UAAA,MAAI,CAACA,MAAL,CAAY,MAAZ;AACD,SAPa;AAQdC,QAAAA,OAAO,EAAE,KAAKC;AARA,OAAhB;AAWA,UAAMC,WAAW,GAAG,IAAIpB,MAAM,CAACqB,MAAX,CAAkBhB,GAAlB,EAAuBQ,OAAvB,CAApB;AAEA,aAAOO,WAAP;AACD;;;SAED,eAAY;AACV,aAAO,KAAKA,WAAL,CAAiBE,MAAjB,KAA4B,CAAnC;AACD,K;SAED,aAAUC,KAAV,EAAiB;AACf,UAAIA,KAAK,KAAK,IAAd,EAAoB;AAClB,aAAKH,WAAL,CAAiBE,MAAjB,GAA0B,CAA1B;AACD,OAFD,MAEO;AACL,aAAKF,WAAL,CAAiBE,MAAjB,GAA0B,CAA1B;AACD;AACF;;;WAED,gBAAOE,OAAP,EAAgB;AACd,UAAI,CAACA,OAAO,CAACpB,QAAT,IAAqBoB,OAAO,CAACJ,WAAR,CAAoBK,SAA7C,EAAwD;AACtDD,QAAAA,OAAO,CAACpB,QAAR,GAAmB,IAAnB;AACAH,QAAAA,EAAE,CAACyB,IAAH,CAAQ,MAAR;AACD;AACF;;;WAED,sBAAa;AACX;;AAEA,UAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AACvC5B,QAAAA,EAAE,CAAC6B,EAAH,CAAM,MAAN,EAAcD,OAAd;AACD,OAFe,CAAhB;AAGA,WAAKT,WAAL,CAAiBW,IAAjB;AAEA,aAAOJ,OAAP;AACD;;;WAED,uBAAc;AAAA;;AACZ;;AAEA,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9B,QAAA,MAAI,CAACT,WAAL,CAAiBY,KAAjB;;AACAH,QAAAA,OAAO;AACR,OAHM,CAAP;AAID;;;;EAlEuB/B,K;;AAqE1B,eAAeI,WAAf","sourcesContent":["import EventEmitter from 'eventemitter3'\nimport Video from '../Video'\nimport DOM from '../DOM'\nimport JSMpeg from './vendor/jsmpeg.min'\n\nconst EE = new EventEmitter()\n\n/**\n * Video player based on JSMpeg.\n *\n * @example\n * // create\n * const url = 'https://url/to/video'\n * const video = new CanvasVideo(url)\n *\n * // play\n * video.play()\n */\nclass CanvasVideo extends Video {\n  constructor(...args) {\n    super(...args)\n\n    this.isPlayed = false\n  }\n\n  createVideoPlayer(url, { layer, poster, loop } = {}) {\n    const video = new DOM('canvas', { layer }).setOrigin(0.5)\n    this.video = video\n    this.addChild(video)\n\n    const posterURL = poster\n    const options = {\n      canvas: video.dom,\n      poster: posterURL,\n      loop,\n      videoBufferSize: 2048 * 1024, // 1024 means 1KB\n      onPlay: () => {\n        this.onPlay(this)\n      },\n      onEnded: this.onEnd,\n    }\n\n    const videoPlayer = new JSMpeg.Player(url, options)\n\n    return videoPlayer\n  }\n\n  get muted() {\n    return this.videoPlayer.volume === 0\n  }\n\n  set muted(value) {\n    if (value === true) {\n      this.videoPlayer.volume = 0\n    } else {\n      this.videoPlayer.volume = 1\n    }\n  }\n\n  onPlay(context) {\n    if (!context.isPlayed && context.videoPlayer.isPlaying) {\n      context.isPlayed = true\n      EE.emit('play')\n    }\n  }\n\n  nativePlay() {\n    super.nativePlay()\n\n    const promise = new Promise((resolve) => {\n      EE.on('play', resolve)\n    })\n    this.videoPlayer.play()\n\n    return promise\n  }\n\n  nativePause() {\n    super.nativePause()\n\n    return new Promise((resolve) => {\n      this.videoPlayer.pause()\n      resolve()\n    })\n  }\n}\n\nexport default CanvasVideo\n"],"file":"index.js"}