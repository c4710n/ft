{"version":3,"sources":["../../src/display/Video.js"],"names":["Layer","PIXI","timeout","Video","url","layer","DOM_DISPLAY","poster","loop","controls","spinnerTimeout","onShowSpinner","onHideSpinner","emit","$playing","$spinnerTimer","stop","$readyTime","$previousTime","videoPlayer","createVideoPlayer","isCaching","currentTime","isPlaying","reset","isPaused","video","setSize","setAngle","DOM_DISPLAY_HIDDEN","nativePlay","nativePause","start","duration","value","added","Container"],"mappings":"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","sourcesContent":["import { Layer, PIXI } from '../core'\nimport { timeout } from '../time'\n\nclass Video extends PIXI.Container {\n  /**\n   * @param {string} url='' url of video\n   * @param {Object} options\n   */\n  constructor(\n    url,\n    {\n      layer = Layer.DOM_DISPLAY,\n      poster,\n      loop = false,\n      controls = false,\n      spinnerTimeout = 300,\n      onShowSpinner,\n      onHideSpinner,\n    } = {}\n  ) {\n    super()\n\n    this.$readyTime = 0\n    this.$playing = false\n    this.$previousTime = 0\n\n    this.videoPlayer = this.createVideoPlayer(url, {\n      layer,\n      poster,\n      loop,\n      controls,\n    })\n\n    this.onShowSpinner = onShowSpinner\n    this.onHideSpinner = onHideSpinner\n    this.$spinnerTimer = timeout(spinnerTimeout, () => {\n      if (this.isCaching) {\n        this.onShowSpinner?.(this)\n      }\n    })\n  }\n\n  onAdded() {}\n\n  onRemoved() {}\n\n  onUpdate() {\n    const { currentTime } = this\n\n    if (this.isPlaying) {\n      this.$spinnerTimer.reset()\n      this.emit('progress', currentTime)\n    }\n\n    if (this.isPlaying || this.isPaused) {\n      this.onHideSpinner?.(this)\n    }\n\n    this.$previousTime = currentTime\n  }\n\n  // eslint-disable-next-line\n  createVideoPlayer(url, { layer, poster, loop } = {}) {}\n\n  setSize(...args) {\n    this.video.setSize(...args)\n\n    return this\n  }\n\n  setAngle(...args) {\n    this.video.setAngle(...args)\n\n    return this\n  }\n\n  setLayer(layer = Layer.DOM_DISPLAY_HIDDEN) {\n    this.video.layer = layer\n\n    return this\n  }\n\n  unlock() {}\n\n  play() {\n    this.emit('play')\n    return this.nativePlay()\n  }\n\n  pause() {\n    this.emit('pause')\n    return this.nativePause()\n  }\n\n  reset() {\n    this.emit('reset')\n    this.videoPlayer.currentTime = this.$readyTime\n  }\n\n  nativePlay() {\n    this.$playing = true\n    this.$spinnerTimer.start()\n  }\n\n  nativePause() {\n    this.$playing = false\n    this.$spinnerTimer.stop()\n  }\n\n  onEnd = () => {\n    this.emit('end')\n    this.$playing = false\n    this.$spinnerTimer.stop()\n    this.onHideSpinner?.(this)\n  }\n\n  get duration() {\n    return this.videoPlayer.duration\n  }\n\n  get currentTime() {\n    return this.videoPlayer.currentTime\n  }\n\n  set currentTime(value) {\n    this.videoPlayer.currentTime = value\n  }\n\n  get isCaching() {\n    return this.added && this.$playing && this.currentTime <= this.$previousTime\n  }\n\n  get isPlaying() {\n    return this.added && this.$playing && this.currentTime > this.$previousTime\n  }\n\n  get isPaused() {\n    return (\n      this.added && !this.$playing && this.currentTime == this.$previousTime\n    )\n  }\n}\n\nexport default Video\n"],"file":"Video.js"}