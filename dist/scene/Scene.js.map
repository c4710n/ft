{"version":3,"sources":["../../src/scene/Scene.js"],"names":["PIXI","Container","Scene","name","setInteractive","translateIn","Promise","resolve","translateOut"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,IAAT,QAAqB,SAArB;AAEA,IAAQC,SAAR,GAAsBD,IAAtB,CAAQC,SAAR;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,K;;;;;AACJ,iBAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AAChB;AAEA,UAAKA,IAAL,GAAYA,IAAZ;;AACA,UAAKC,cAAL,CAAoB,IAApB;;AAJgB;AAKjB;;;;;kFAED;AAAA;AAAA;AAAA;AAAA;AAAA,qBACM,KAAKC,WADX;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAEU,KAAKA,WAAL,EAFV;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAIUC,OAAO,CAACC,OAAR,EAJV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;mFAQA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACM,KAAKC,YADX;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAEU,KAAKA,YAAL,EAFV;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAIUF,OAAO,CAACC,OAAR,EAJV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;EAhBkBN,S;;AAyBpB,eAAeC,KAAf","sourcesContent":["import { PIXI } from '../core'\n\nconst { Container } = PIXI\n\n/**\n * Scene is abstraction of container.\n *\n * @example\n * // Scene is just a normal container.\n * class Playground extends Scene {\n *   onAdded() {\n *     // ...\n *   }\n * }\n *\n * @example\n * // If you wanna extend Scene's constructor, please make sure `super(name)`\n * // is called. Because attribute `name` is required by SceneManager.\n * class Playground extends Scene {\n *   constructor(name) {\n *     super(name)\n *\n *     this.toggle = true\n *   }\n * }\n */\nclass Scene extends Container {\n  constructor(name) {\n    super()\n\n    this.name = name\n    this.setInteractive(true)\n  }\n\n  async _translateIn() {\n    if (this.translateIn) {\n      await this.translateIn()\n    } else {\n      await Promise.resolve()\n    }\n  }\n\n  async _translateOut() {\n    if (this.translateOut) {\n      await this.translateOut()\n    } else {\n      await Promise.resolve()\n    }\n  }\n}\n\nexport default Scene\n"],"file":"Scene.js"}