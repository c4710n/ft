{"version":3,"sources":["../../src/util/capture.js"],"names":["app","capture","displayObject","format","quality","width","height","$width","undefined","$height","renderer","sharedRenderer","rt","sharedRenderTexture","resize","render","dataURL","extract","canvas","toDataURL"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,QAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,OAAT,CACEC,aADF,EAGE;AAAA,iFAD0D,EAC1D;AAAA,yBADEC,MACF;AAAA,MADEA,MACF,4BADW,YACX;AAAA,0BADyBC,OACzB;AAAA,MADyBA,OACzB,6BADmC,GACnC;AAAA,MADwCC,KACxC,QADwCA,KACxC;AAAA,MAD+CC,MAC/C,QAD+CA,MAC/C;;AACA,MAAMC,MAAM,GAAGF,KAAK,KAAKG,SAAV,GAAsBH,KAAtB,GAA8BH,aAAa,CAACG,KAA3D;AACA,MAAMI,OAAO,GAAGH,MAAM,KAAKE,SAAX,GAAuBF,MAAvB,GAAgCJ,aAAa,CAACI,MAA9D;AAEA,MAAMI,QAAQ,GAAGV,GAAG,CAACW,cAArB;AACA,MAAMC,EAAE,GAAGZ,GAAG,CAACa,mBAAf;AACAD,EAAAA,EAAE,CAACE,MAAH,CAAUP,MAAV,EAAkBE,OAAlB;AACAC,EAAAA,QAAQ,CAACK,MAAT,CAAgBb,aAAhB,EAA+BU,EAA/B;AAEA,MAAMI,OAAO,GAAGN,QAAQ,CAACO,OAAT,CAAiBC,MAAjB,CAAwBN,EAAxB,EAA4BO,SAA5B,CAAsChB,MAAtC,EAA8CC,OAA9C,CAAhB;AAEA,SAAOY,OAAP;AACD;;AAED,eAAef,OAAf","sourcesContent":["import app from '../app'\n\n/**\n * Generate DataURL of given display object.\n *\n * @param {DisplayObject} displayObject the display object to be captured.\n * @param {Object} [options]\n * @param {string} [options.format='image/jpeg'] the image's format.\n * @param {number} [options.quality=0.8] a number between 0 and 1 indicating the image quality.\n * @param {number} [options.width] specify another width instead of the width of displayObject\n * @param {number} [options.height] specify another height instead of the height of displayObject.\n * @return {DataURL} the data url of generated image.\n *\n * @example\n * const dataURL = capture(display, { image: 'image/png', quality: 0.92 })\n */\nfunction capture(\n  displayObject,\n  { format = 'image/jpeg', quality = 0.8, width, height } = {}\n) {\n  const $width = width !== undefined ? width : displayObject.width\n  const $height = height !== undefined ? height : displayObject.height\n\n  const renderer = app.sharedRenderer\n  const rt = app.sharedRenderTexture\n  rt.resize($width, $height)\n  renderer.render(displayObject, rt)\n\n  const dataURL = renderer.extract.canvas(rt).toDataURL(format, quality)\n\n  return dataURL\n}\n\nexport default capture\n"],"file":"capture.js"}